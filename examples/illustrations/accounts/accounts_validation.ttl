@prefix identity: <https://ontology.unifiedcyberontology.org/uco/identity/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix uco-core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/actor-0058fc60-4b1b-4ad4-ba7e-231d00d40973> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/actor-0058fc60-4b1b-4ad4-ba7e-231d00d40973> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "willyROX@gmail.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/email_account-e798e18c-0bef-4883-83df-e2710c4bc7e4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "Willy" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "123secretpassword456" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "1235556677@facebook.net" ;
				observable:accountIssuer <http://example.org/kb/facebook_org-84a47032-567a-4580-9b88-f0141abdc7bf> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-ed4caa32-84c8-4813-b21d-f350e47cba7c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/facebook_account-c188af2d-9651-44a8-8d4c-07a1f5f1aa20> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin "xXWillyRocksXx" ;
				observable:displayName "WILLY THE KID" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "1337_P@ZZW0RD" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "willyROX@gmail.com" ;
				observable:accountIssuer <http://example.org/kb/google_org-e2ec4537-c2d4-46c5-b159-6f90e84c2e71> ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-db5e8cbe-70e7-4dff-b981-2c5751b7923c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/google_account-f514a133-bca6-488c-a0a3-44c40f9ac766> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class uco-core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path uco-core:hasFacet ;
			] ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin
					"willyROX" ,
					"willyROX@gmail.com"
					;
				observable:displayName "William Smith" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "William" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "Willy" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "Willy" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "Willy" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
				identity:givenName "Willy" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountAuthenticationFacet ;
				observable:password "123secretpassword456" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "123secretpassword456" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountAuthenticationFacet ;
				observable:password "123secretpassword456" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "123secretpassword456" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountAuthenticationFacet ;
				observable:password "1337_P@ZZW0RD" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "1337_P@ZZW0RD" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountAuthenticationFacet ;
				observable:password "1337_P@ZZW0RD" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountAuthenticationFacet ;
				observable:password "1337_P@ZZW0RD" ;
				observable:passwordLastChanged "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIdentifier "1235556677@facebook.net" ;
				observable:accountIssuer <http://example.org/kb/facebook_org-84a47032-567a-4580-9b88-f0141abdc7bf> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "1235556677@facebook.net" ;
				observable:accountIssuer <http://example.org/kb/facebook_org-84a47032-567a-4580-9b88-f0141abdc7bf> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIdentifier "1235556677@facebook.net" ;
				observable:accountIssuer <http://example.org/kb/facebook_org-84a47032-567a-4580-9b88-f0141abdc7bf> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "1235556677@facebook.net" ;
				observable:accountIssuer <http://example.org/kb/facebook_org-84a47032-567a-4580-9b88-f0141abdc7bf> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIdentifier "willyROX@gmail.com" ;
				observable:accountIssuer <http://example.org/kb/google_org-e2ec4537-c2d4-46c5-b159-6f90e84c2e71> ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "willyROX@gmail.com" ;
				observable:accountIssuer <http://example.org/kb/google_org-e2ec4537-c2d4-46c5-b159-6f90e84c2e71> ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIdentifier "willyROX@gmail.com" ;
				observable:accountIssuer <http://example.org/kb/google_org-e2ec4537-c2d4-46c5-b159-6f90e84c2e71> ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIdentifier "willyROX@gmail.com" ;
				observable:accountIssuer <http://example.org/kb/google_org-e2ec4537-c2d4-46c5-b159-6f90e84c2e71> ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-db5e8cbe-70e7-4dff-b981-2c5751b7923c> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-db5e8cbe-70e7-4dff-b981-2c5751b7923c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-db5e8cbe-70e7-4dff-b981-2c5751b7923c> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-db5e8cbe-70e7-4dff-b981-2c5751b7923c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-ed4caa32-84c8-4813-b21d-f350e47cba7c> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-ed4caa32-84c8-4813-b21d-f350e47cba7c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-ed4caa32-84c8-4813-b21d-f350e47cba7c> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ApplicationAccountFacet ;
				observable:application <http://example.org/kb/application-ed4caa32-84c8-4813-b21d-f350e47cba7c> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DigitalAccountFacet ;
				observable:accountLogin
					"willyROX" ,
					"willyROX@gmail.com"
					;
				observable:displayName "William Smith" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin
					"willyROX" ,
					"willyROX@gmail.com"
					;
				observable:displayName "William Smith" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DigitalAccountFacet ;
				observable:accountLogin
					"willyROX" ,
					"willyROX@gmail.com"
					;
				observable:displayName "William Smith" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin
					"willyROX" ,
					"willyROX@gmail.com"
					;
				observable:displayName "William Smith" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DigitalAccountFacet ;
				observable:accountLogin "xXWillyRocksXx" ;
				observable:displayName "WILLY THE KID" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin "xXWillyRocksXx" ;
				observable:displayName "WILLY THE KID" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DigitalAccountFacet ;
				observable:accountLogin "xXWillyRocksXx" ;
				observable:displayName "WILLY THE KID" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DigitalAccountFacet ;
				observable:accountLogin "xXWillyRocksXx" ;
				observable:displayName "WILLY THE KID" ;
				observable:firstLoginTime "2010-01-21T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:lastLoginTime "2010-03-12T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-eeb346b0-470d-402b-b9ce-17134b1c572e> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "willyROX@gmail.com" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "willyROX@gmail.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "willyROX@gmail.com" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape uco-core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "willyROX@gmail.com" ;
			] ;
		]
		;
	.

