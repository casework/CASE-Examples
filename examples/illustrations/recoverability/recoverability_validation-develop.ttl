@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix drafting: <http://example.org/ontology/drafting/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/4026fabd-924d-4138-a6ba-73df2eb37bcb> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/4026fabd-924d-4138-a6ba-73df2eb37bcb> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "jpg" ;
				observable:fileName "IMG-20181120-WA0000" ;
				observable:filePath "/storage/emulated/0/WhatsApp/Media/WhatsApp Images/Sent/IMG-20181120-WA0000.jpg" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/665d63be-93e6-4d3e-8e75-3112be091e93> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/665d63be-93e6-4d3e-8e75-3112be091e93> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2018-11-18T22:53:09.595000+00:00"^^xsd:dateTime ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "" ;
				observable:fileName "Thebatplan" ;
				observable:filePath "D:\\Thebatplan" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2018-11-18T20:10:48+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/bd64bdd9-3dcd-4828-a25b-a72c06e472cd> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/bd64bdd9-3dcd-4828-a25b-a72c06e472cd> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "tmp" ;
				observable:fileName "~badquinn3@gmail.com.ost.tmp" ;
				observable:filePath "/Users/Harley Quinn/AppData/Local/Microsoft/Outlook/badquinn3@gmail.com.ost" ;
				observable:isDirectory "false"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/c01e67f9-adb5-48bd-b09d-e7326fa8d592> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "partially recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/c01e67f9-adb5-48bd-b09d-e7326fa8d592> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				observable:from <http://example.org/kb/e1e34d20-e77c-4087-a87d-d169d7155b8d> ;
				observable:messageText "Diana sent a location." ;
				observable:sentTime "2018-12-04T07:52:47+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/f96cfe21-1149-4a46-acb9-7299152c776b> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cb0354f5-2dbd-4c02-8a6c-011b77125ee2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cb0354f5-2dbd-4c02-8a6c-011b77125ee2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "1999-01-02T05:00:00+00:00"^^xsd:dateTime ;
				observable:createdTime "2011-12-25T19:02:22+00:00"^^xsd:dateTime ;
				observable:extension "txt" ;
				observable:fileName "_BEID.txt" ;
				observable:filePath "/img_dfr-01-fat.dd/vol_vol2/_BEID.txt" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2000-02-29T19:11:00+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "712"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "partially recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "partially recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "partially recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "partially recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:RecoveredObjectFacet ;
				drafting:contentRecoveredStatus "unknown"^^drafting:RecoveredObjectStatusVocab ;
				drafting:metadataRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
				drafting:nameRecoveredStatus "recovered"^^drafting:RecoveredObjectStatusVocab ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "1999-01-02T05:00:00+00:00"^^xsd:dateTime ;
				observable:createdTime "2011-12-25T19:02:22+00:00"^^xsd:dateTime ;
				observable:extension "txt" ;
				observable:fileName "_BEID.txt" ;
				observable:filePath "/img_dfr-01-fat.dd/vol_vol2/_BEID.txt" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2000-02-29T19:11:00+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "712"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "1999-01-02T05:00:00+00:00"^^xsd:dateTime ;
				observable:createdTime "2011-12-25T19:02:22+00:00"^^xsd:dateTime ;
				observable:extension "txt" ;
				observable:fileName "_BEID.txt" ;
				observable:filePath "/img_dfr-01-fat.dd/vol_vol2/_BEID.txt" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2000-02-29T19:11:00+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "712"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "1999-01-02T05:00:00+00:00"^^xsd:dateTime ;
				observable:createdTime "2011-12-25T19:02:22+00:00"^^xsd:dateTime ;
				observable:extension "txt" ;
				observable:fileName "_BEID.txt" ;
				observable:filePath "/img_dfr-01-fat.dd/vol_vol2/_BEID.txt" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2000-02-29T19:11:00+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "712"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "1999-01-02T05:00:00+00:00"^^xsd:dateTime ;
				observable:createdTime "2011-12-25T19:02:22+00:00"^^xsd:dateTime ;
				observable:extension "txt" ;
				observable:fileName "_BEID.txt" ;
				observable:filePath "/img_dfr-01-fat.dd/vol_vol2/_BEID.txt" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2000-02-29T19:11:00+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "712"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2018-11-18T22:53:09.595000+00:00"^^xsd:dateTime ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "" ;
				observable:fileName "Thebatplan" ;
				observable:filePath "D:\\Thebatplan" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2018-11-18T20:10:48+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2018-11-18T22:53:09.595000+00:00"^^xsd:dateTime ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "" ;
				observable:fileName "Thebatplan" ;
				observable:filePath "D:\\Thebatplan" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2018-11-18T20:10:48+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2018-11-18T22:53:09.595000+00:00"^^xsd:dateTime ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "" ;
				observable:fileName "Thebatplan" ;
				observable:filePath "D:\\Thebatplan" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2018-11-18T20:10:48+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2018-11-18T22:53:09.595000+00:00"^^xsd:dateTime ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "" ;
				observable:fileName "Thebatplan" ;
				observable:filePath "D:\\Thebatplan" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2018-11-18T20:10:48+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "jpg" ;
				observable:fileName "IMG-20181120-WA0000" ;
				observable:filePath "/storage/emulated/0/WhatsApp/Media/WhatsApp Images/Sent/IMG-20181120-WA0000.jpg" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "jpg" ;
				observable:fileName "IMG-20181120-WA0000" ;
				observable:filePath "/storage/emulated/0/WhatsApp/Media/WhatsApp Images/Sent/IMG-20181120-WA0000.jpg" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "jpg" ;
				observable:fileName "IMG-20181120-WA0000" ;
				observable:filePath "/storage/emulated/0/WhatsApp/Media/WhatsApp Images/Sent/IMG-20181120-WA0000.jpg" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2018-11-19T00:29:15+00:00"^^xsd:dateTime ;
				observable:extension "jpg" ;
				observable:fileName "IMG-20181120-WA0000" ;
				observable:filePath "/storage/emulated/0/WhatsApp/Media/WhatsApp Images/Sent/IMG-20181120-WA0000.jpg" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "1389601"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "tmp" ;
				observable:fileName "~badquinn3@gmail.com.ost.tmp" ;
				observable:filePath "/Users/Harley Quinn/AppData/Local/Microsoft/Outlook/badquinn3@gmail.com.ost" ;
				observable:isDirectory "false"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "tmp" ;
				observable:fileName "~badquinn3@gmail.com.ost.tmp" ;
				observable:filePath "/Users/Harley Quinn/AppData/Local/Microsoft/Outlook/badquinn3@gmail.com.ost" ;
				observable:isDirectory "false"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "tmp" ;
				observable:fileName "~badquinn3@gmail.com.ost.tmp" ;
				observable:filePath "/Users/Harley Quinn/AppData/Local/Microsoft/Outlook/badquinn3@gmail.com.ost" ;
				observable:isDirectory "false"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "tmp" ;
				observable:fileName "~badquinn3@gmail.com.ost.tmp" ;
				observable:filePath "/Users/Harley Quinn/AppData/Local/Microsoft/Outlook/badquinn3@gmail.com.ost" ;
				observable:isDirectory "false"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:from <http://example.org/kb/e1e34d20-e77c-4087-a87d-d169d7155b8d> ;
				observable:messageText "Diana sent a location." ;
				observable:sentTime "2018-12-04T07:52:47+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/f96cfe21-1149-4a46-acb9-7299152c776b> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				observable:from <http://example.org/kb/e1e34d20-e77c-4087-a87d-d169d7155b8d> ;
				observable:messageText "Diana sent a location." ;
				observable:sentTime "2018-12-04T07:52:47+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/f96cfe21-1149-4a46-acb9-7299152c776b> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:from <http://example.org/kb/e1e34d20-e77c-4087-a87d-d169d7155b8d> ;
				observable:messageText "Diana sent a location." ;
				observable:sentTime "2018-12-04T07:52:47+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/f96cfe21-1149-4a46-acb9-7299152c776b> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				observable:from <http://example.org/kb/e1e34d20-e77c-4087-a87d-d169d7155b8d> ;
				observable:messageText "Diana sent a location." ;
				observable:sentTime "2018-12-04T07:52:47+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/f96cfe21-1149-4a46-acb9-7299152c776b> ;
			] ;
		]
		;
	.

