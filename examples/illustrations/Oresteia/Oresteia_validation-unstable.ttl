@prefix configuration: <https://ontology.unifiedcyberontology.org/uco/configuration/> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix identity: <https://ontology.unifiedcyberontology.org/uco/identity/> .
@prefix investigation: <https://ontology.caseontology.org/case/investigation/> .
@prefix location: <https://ontology.unifiedcyberontology.org/uco/location/> .
@prefix ns1: <http://example.org/ontology/drafting/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vocabulary: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/aeschylus-1ab8a80e-39fb-4209-9781-b10bdbc5d0c2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/aeschylus-1ab8a80e-39fb-4209-9781-b10bdbc5d0c2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argos-palace-d9633e60-a44c-40f5-a0f0-c5225f3ef90e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argos-palace-d9633e60-a44c-40f5-a0f0-c5225f3ef90e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/attachment_file-ad07f4fb-ef85-4a74-ad88-68341a1e9606> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-1b38d28a-f88f-471f-8f83-16877dedacc0> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-1b38d28a-f88f-471f-8f83-16877dedacc0> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-device-d2ac1471-2d0f-4032-8cca-53d317600cba> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-device-d2ac1471-2d0f-4032-8cca-53d317600cba> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition-64c9eeab-7e98-4256-a4f2-c3bb92ae0ef1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-1a6175e1-cef7-5ee3-8703-22f5f7a43603> ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition-64c9eeab-7e98-4256-a4f2-c3bb92ae0ef1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition-64c9eeab-7e98-4256-a4f2-c3bb92ae0ef1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-95d5a618-8265-4cb8-8140-ac8ea281c536> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-bfa02feb-6184-5ca5-9ba3-272bf4367c5d> ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-95d5a618-8265-4cb8-8140-ac8ea281c536> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-mmssms-1ab55cb8-581d-4ebc-99e4-4db8d4261535> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-c6cc7dd6-1bf9-5454-9653-37caff09411d> ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-mmssms-1ab55cb8-581d-4ebc-99e4-4db8d4261535> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-3a61cb3a-422d-4953-af70-25a860456e50> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-mobileaccount-363dd368-94bd-4dbb-af1d-f53d0085791e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-mobileaccount-363dd368-94bd-4dbb-af1d-f53d0085791e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-account-relationship-91a86b3a-d87f-4130-9e28-d6e7dbd2d2a7> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-location-relationship-9364f91b-e2d2-4307-b76a-473cd7b118bb> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-a960648e-c88e-4728-9853-7b7f06de8caa> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-a960648e-c88e-4728-9853-7b7f06de8caa> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-orestes-email-9e2f3524-6541-459e-96e7-61c61f97e850> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-258c14b5-e726-4075-abe9-9c8d7f556462> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/euripides-3696c710-161f-47af-9ae8-61b178611773> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/euripides-3696c710-161f-47af-9ae8-61b178611773> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
			sh:resultMessage "Less than 1 values on kb:investigation-2545442b-321c-754d-bcb8-c40d321ce2c2->core:object" ;
			sh:resultPath core:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path core:object ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-ac9fd560-261e-4cd6-af64-8b83d100b9a8> ;
			sh:resultMessage "Less than 1 values on kb:investigation-ac9fd560-261e-4cd6-af64-8b83d100b9a8->core:object" ;
			sh:resultPath core:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path core:object ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action-714255fe-ce2d-43e5-b0da-0910cc0e3997> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/orestes-facebookmsg-f7c67008-efe1-441c-8e52-2ec189dd6e56> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-388e482f-19fd-45f9-8095-f40a434b64a6> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends-91e62226-de0c-409a-950a-48a4374b2ab0> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message-4e9bfb9e-c4b4-4ebd-a7b0-a49eba0811a6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message-853716fe-c35e-45af-81d3-368dfb6b7eba> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/thyestes-b9111c63-19a8-4bf4-8287-b14485f01b45> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/thyestes-b9111c63-19a8-4bf4-8287-b14485f01b45> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship-bd43f037-cf0f-4494-b36d-94f7a1da700c> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship-dfad5a2f-696b-44bd-88b7-04e634f7ee57> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "Deprecation notice: the value referenced by observable:storageCapacityInBytes will be required to be stored in observable:totalStorageCapacityInBytes in UCO 2.0.0."@en ;
			sh:resultPath observable:storageCapacityInBytes ;
			sh:resultSeverity sh:Warning ;
			sh:sourceConstraintComponent sh:MaxCountConstraintComponent ;
			sh:sourceShape [
				sh:maxCount "0"^^xsd:integer ;
				sh:message "Deprecation notice: the value referenced by observable:storageCapacityInBytes will be required to be stored in observable:totalStorageCapacityInBytes in UCO 2.0.0."@en ;
				sh:path observable:storageCapacityInBytes ;
				sh:severity sh:Warning ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-388e482f-19fd-45f9-8095-f40a434b64a6> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends-91e62226-de0c-409a-950a-48a4374b2ab0> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-388e482f-19fd-45f9-8095-f40a434b64a6> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends-91e62226-de0c-409a-950a-48a4374b2ab0> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-388e482f-19fd-45f9-8095-f40a434b64a6> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends-91e62226-de0c-409a-950a-48a4374b2ab0> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-388e482f-19fd-45f9-8095-f40a434b64a6> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends-91e62226-de0c-409a-950a-48a4374b2ab0> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "command_line_arguments" ;
				configuration:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "command_line_arguments" ;
				configuration:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "command_line_arguments" ;
				configuration:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "command_line_arguments" ;
				configuration:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "debug_mode" ;
				configuration:itemValue "False" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "debug_mode" ;
				configuration:itemValue "False" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "debug_mode" ;
				configuration:itemValue "False" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "debug_mode" ;
				configuration:itemValue "False" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "enabled_parser_names" ;
				configuration:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "enabled_parser_names" ;
				configuration:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "enabled_parser_names" ;
				configuration:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "enabled_parser_names" ;
				configuration:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_expression" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_expression" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_expression" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_expression" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_file" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_file" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_file" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "filter_file" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "identifier" ;
				configuration:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "identifier" ;
				configuration:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "identifier" ;
				configuration:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "identifier" ;
				configuration:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "parser_filter_expression" ;
				configuration:itemValue "sqlite" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "parser_filter_expression" ;
				configuration:itemValue "sqlite" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "parser_filter_expression" ;
				configuration:itemValue "sqlite" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "parser_filter_expression" ;
				configuration:itemValue "sqlite" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_encoding" ;
				configuration:itemValue "cp1252" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_encoding" ;
				configuration:itemValue "cp1252" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_encoding" ;
				configuration:itemValue "cp1252" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_encoding" ;
				configuration:itemValue "cp1252" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_year" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_year" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_year" ;
				configuration:itemValue "" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "preferred_year" ;
				configuration:itemValue "" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "query" ;
				configuration:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "query" ;
				configuration:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "query" ;
				configuration:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "query" ;
				configuration:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "schema_match" ;
				configuration:itemValue "True" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "schema_match" ;
				configuration:itemValue "True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a configuration:ConfigurationEntry ;
				configuration:itemName "schema_match" ;
				configuration:itemValue "True" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a configuration:ConfigurationEntry ;
				configuration:itemName "schema_match" ;
				configuration:itemValue "True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:nonNegativeInteger" ;
			sh:resultPath core:confidence ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:nonNegativeInteger ;
				sh:maxCount "1"^^xsd:integer ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path core:confidence ;
			] ;
			sh:value "Probably True" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:nonNegativeInteger" ;
			sh:resultPath core:confidence ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:nonNegativeInteger ;
				sh:maxCount "1"^^xsd:integer ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path core:confidence ;
			] ;
			sh:value "Probably True" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-1a5ab0ca-55bc-458e-a3f2-8204db807985> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "Value is not member of the vocabulary AccountTypeVocab." ;
			sh:resultPath observable:accountType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:OrConstraintComponent ;
			sh:sourceShape [
				sh:message "Value is not member of the vocabulary AccountTypeVocab." ;
				sh:or (
					[
						sh:datatype vocabulary:AccountTypeVocab ;
						sh:in (
							"ldap"^^vocabulary:AccountTypeVocab
							"nis"^^vocabulary:AccountTypeVocab
							"openid"^^vocabulary:AccountTypeVocab
							"radius"^^vocabulary:AccountTypeVocab
							"tacacs"^^vocabulary:AccountTypeVocab
							"unix"^^vocabulary:AccountTypeVocab
							"windows_domain"^^vocabulary:AccountTypeVocab
							"windows_local"^^vocabulary:AccountTypeVocab
						) ;
					]
					[
						sh:datatype xsd:string ;
					]
				) ;
				sh:path observable:accountType ;
			] ;
			sh:value "Phone"^^vocabulary:AccountTypeVocab ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "Value is not member of the vocabulary AccountTypeVocab." ;
			sh:resultPath observable:accountType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:OrConstraintComponent ;
			sh:sourceShape [
				sh:message "Value is not member of the vocabulary AccountTypeVocab." ;
				sh:or (
					[
						sh:datatype vocabulary:AccountTypeVocab ;
						sh:in (
							"ldap"^^vocabulary:AccountTypeVocab
							"nis"^^vocabulary:AccountTypeVocab
							"openid"^^vocabulary:AccountTypeVocab
							"radius"^^vocabulary:AccountTypeVocab
							"tacacs"^^vocabulary:AccountTypeVocab
							"unix"^^vocabulary:AccountTypeVocab
							"windows_domain"^^vocabulary:AccountTypeVocab
							"windows_local"^^vocabulary:AccountTypeVocab
						) ;
					]
					[
						sh:datatype xsd:string ;
					]
				) ;
				sh:path observable:accountType ;
			] ;
			sh:value "Phone"^^vocabulary:AccountTypeVocab ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-1a6175e1-cef7-5ee3-8703-22f5f7a43603> ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-1a6175e1-cef7-5ee3-8703-22f5f7a43603> ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-1a6175e1-cef7-5ee3-8703-22f5f7a43603> ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-1a6175e1-cef7-5ee3-8703-22f5f7a43603> ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-bfa02feb-6184-5ca5-9ba3-272bf4367c5d> ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-bfa02feb-6184-5ca5-9ba3-272bf4367c5d> ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-bfa02feb-6184-5ca5-9ba3-272bf4367c5d> ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-bfa02feb-6184-5ca5-9ba3-272bf4367c5d> ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-c6cc7dd6-1bf9-5454-9653-37caff09411d> ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-c6cc7dd6-1bf9-5454-9653-37caff09411d> ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-c6cc7dd6-1bf9-5454-9653-37caff09411d> ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash <http://example.org/kb/hash-c6cc7dd6-1bf9-5454-9653-37caff09411d> ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-258c14b5-e726-4075-abe9-9c8d7f556462> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-258c14b5-e726-4075-abe9-9c8d7f556462> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-258c14b5-e726-4075-abe9-9c8d7f556462> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-1a58cfc9-d50a-4861-bd0c-6638250eb0db> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-258c14b5-e726-4075-abe9-9c8d7f556462> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application-4e98e83c-4d9e-48da-ac3a-9bc42b7a545e> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-ddd1303c-a85e-4307-b79e-b800a2420842> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-10ecce02-71b9-4623-8fbc-1f2914c79362> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-7d296cea-00aa-4f42-b357-281a64df01e6> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-93b32564-9b02-497e-a58f-1b4f1c03c41e>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "Deprecation notice: the value referenced by observable:storageCapacityInBytes will be required to be stored in observable:totalStorageCapacityInBytes in UCO 2.0.0."@en ;
			sh:resultPath observable:storageCapacityInBytes ;
			sh:resultSeverity sh:Warning ;
			sh:sourceConstraintComponent sh:MaxCountConstraintComponent ;
			sh:sourceShape [
				sh:maxCount "0"^^xsd:integer ;
				sh:message "Deprecation notice: the value referenced by observable:storageCapacityInBytes will be required to be stored in observable:totalStorageCapacityInBytes in UCO 2.0.0."@en ;
				sh:path observable:storageCapacityInBytes ;
				sh:severity sh:Warning ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		]
		;
	.

