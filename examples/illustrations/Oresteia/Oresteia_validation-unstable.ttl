@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix identity: <https://ontology.unifiedcyberontology.org/uco/identity/> .
@prefix investigation: <https://ontology.caseontology.org/case/investigation/> .
@prefix location: <https://ontology.unifiedcyberontology.org/uco/location/> .
@prefix ns1: <http://example.org/draft#> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix tool: <https://ontology.unifiedcyberontology.org/uco/tool/> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix vocabulary: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/aeschylus-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/aeschylus-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/aeschylus-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/aeschylus-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/annotation1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/annotation1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/annotation2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/annotation2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/annotation3-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/annotation3-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder1-phoneaccnt-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/argive-elder1-phoneaccnt-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder1-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder1-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder2-phoneaccnt-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/argive-elder2-phoneaccnt-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder2-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder2-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder3-phoneaccnt-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/argive-elder3-phoneaccnt-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder3-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argive-elder3-phoneaccnt-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argos-palace-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/argos-palace-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argos-palace-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/argos-palace-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/associated-device1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/associated-device1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/associated-emailaccount1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/associated-emailaccount1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/athens-warrant1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/athens-warrant1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/athenspd-evidenceroom-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/athenspd-evidenceroom-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/attach_relationship1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/attach_relationship1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/attachment_file1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/attachment_file1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/attachment_file1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-device-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-device-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition6-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-image-partition6-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition6-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition6-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-image-partition6-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobileaccount-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-mobileaccount-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobileaccount-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobileaccount-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-forensicduplicate-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-mmssms-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-mobiledevice-mmssms-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-mmssms-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-mobiledevice-mmssms-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cassandra-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cassandra-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/cctv-recording-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/cctv-recording-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/clytemnestra-device-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-device-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-mobileaccount-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/clytemnestra-mobileaccount-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-mobileaccount-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/clytemnestra-mobileaccount-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-account-relationship1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/device-account-relationship1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-account-relationship1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-account-relationship2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/device-account-relationship2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-location-relationship1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/device-location-relationship1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/device-location-relationship1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-emailaccount-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/electra-emailaccount-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-emailaccount-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-orestes-email-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/electra-orestes-email-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-orestes-email-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-uuid> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-uuid> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/electra-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/electra-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/eoghan-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/eoghan-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/euripides-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/euripides-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/euripides-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/euripides-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/forensic-computer1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/forensic-computer1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
			sh:resultMessage "Less than 1 values on kb:investigation-2545442b-321c-754d-bcb8-c40d321ce2c2->core:object" ;
			sh:resultPath core:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path core:object ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigation-2545442b-321c-754d-bcb8-c40d321ce2c2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigation-ac9fd560-261e-4cd6-af64-8b83d100b9a8> ;
			sh:resultMessage "Less than 1 values on kb:investigation-ac9fd560-261e-4cd6-af64-8b83d100b9a8->core:object" ;
			sh:resultPath core:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path core:object ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action-relationship-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action-relationship-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action10-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action10-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action2-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action4-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action4-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigative-action5-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigative-action5-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigator1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigator1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/investigator2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/investigator2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location_relationship1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location_relationship1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/offender1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/offender1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/olympus-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/olympus-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/orestes-emailaccount-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/orestes-emailaccount-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/orestes-facebookmsg-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/orestes-facebookmsg-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/orestes-facebookmsg-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-uuid> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/orestes-selfie-photograph-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/orestes-selfie-photograph-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record3-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record3-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record4-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record4-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record5-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record5-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/role-relationship1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/role-relationship1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/role-relationship2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/role-relationship2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/role-relationship5-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/role-relationship5-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/role-relationship51-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/role-relationship51-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/role-relationship52-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/role-relationship52-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-application1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/sms-application1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/sms-message1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message1-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/sms-message2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sms-message2-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/thyestes-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/thyestes-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/thyestes-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/thyestes-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/tool1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool2-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/tool2-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool2-uuid> ;
			sh:resultMessage "Value does not have class core:Facet" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a tool:ToolConfigurationTypeFacet ;
				tool:configurationSettings
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "command_line_arguments" ;
						tool:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "debug_mode" ;
						tool:itemValue "False" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "enabled_parser_names" ;
						tool:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "filter_expression" ;
						tool:itemValue "" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "filter_file" ;
						tool:itemValue "" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "identifier" ;
						tool:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "parser_filter_expression" ;
						tool:itemValue "sqlite" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "preferred_encoding" ;
						tool:itemValue "cp1252" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "preferred_year" ;
						tool:itemValue "" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool2-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a tool:ToolConfigurationTypeFacet ;
				tool:configurationSettings
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "command_line_arguments" ;
						tool:itemValue "C:/Python27/Scripts/log2timeline.py C:/evidence/AthensPD-2017220601-01.dd.plaso C:/evidence/AthensPD-2017220601-01.dd --no-dependencies-check --parsers sqlite" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "debug_mode" ;
						tool:itemValue "False" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "enabled_parser_names" ;
						tool:itemValue "sqlite, sqlite/twitter_ios, sqlite/kik_messenger, sqlite/android_sms, sqlite/android_gmail, sqlite/android_facebook" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "filter_expression" ;
						tool:itemValue "" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "filter_file" ;
						tool:itemValue "" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "identifier" ;
						tool:itemValue "624f2636e65e451e8dd7cb044ec44b69" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "parser_filter_expression" ;
						tool:itemValue "sqlite" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "preferred_encoding" ;
						tool:itemValue "cp1252" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "preferred_year" ;
						tool:itemValue "" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool3-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/tool3-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool3-uuid> ;
			sh:resultMessage "Value does not have class core:Facet" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a tool:ToolConfigurationTypeFacet ;
				tool:configurationSettings
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "query" ;
						tool:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "schema_match" ;
						tool:itemValue "True" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tool3-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a tool:ToolConfigurationTypeFacet ;
				tool:configurationSettings
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "query" ;
						tool:itemValue "SELECT _id AS id, address, date, read, type, body FROM sms" ;
					] ,
					[
						a tool:ConfigurationSettingType ;
						tool:itemName "schema_match" ;
						tool:itemValue "True" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship3-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/trace-relationship3-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship3-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship4-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/trace-relationship4-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/trace-relationship4-uuid> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/victim1-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/victim1-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/victim5-uuid> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/victim5-uuid> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					core:Facet ,
					<mobileextractor:ToolArgumentsFacet>
					;
				ns1:aquisitionType "Physical Extraction" ;
				ns1:method "Boot Loader" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: Should clockSetting be a xsd:dateTime?" ,
					"TODO: clockSetting as a time-point somewhat illustrates the scenario's specified skew of 25 hours, but might need a reference time-point."
					;
				ns1:localeLanguage "en_GR" ;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-21T06:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "123789" ;
				observable:phoneActivationTime "2017-05-09T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					ns1:iPhoneDeviceFacet ,
					core:Facet
					;
				ns1:ownerName "Clytemnestras iPhone" ;
				ns1:uniqueID "B3858A69A29375E6C706226B3633A3A11EB2A774" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-uuid> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-uuid> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-uuid> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					ns1:FacebookMessageFacet ,
					core:Facet
					;
				observable:body "There lies our country's twofold tyranny, My father's slayers, spoilers of my home." ;
				observable:from <http://example.org/kb/orestes-facebookaccount-uuid> ;
				observable:sentTime "2017-06-21T14:44:54.190000+00:00"^^xsd:dateTime ;
				observable:to <http://example.org/kb/friends> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a investigation:Authorization ;
				investigation:authorizationIdentifier "Warrant12345" ;
				investigation:authorizationType "warrant" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:nonNegativeInteger" ;
			sh:resultPath core:confidence ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:nonNegativeInteger ;
				sh:maxCount "1"^^xsd:integer ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path core:confidence ;
			] ;
			sh:value "Probably True" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a core:ConfidenceFacet ;
				rdfs:comment "TODO This no longer matches the type prescription in UCO." ;
				core:confidence "Probably True" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:nonNegativeInteger" ;
			sh:resultPath core:confidence ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:nonNegativeInteger ;
				sh:maxCount "1"^^xsd:integer ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path core:confidence ;
			] ;
			sh:value "Probably True" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1954-03-07T15:34:24.020000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1956-04-08T16:35:23.350000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1964-10-03T14:39:23.150000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1968-09-25T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:BirthInformationFacet ;
				identity:birthdate "1998-03-02T14:23:42.230000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Argos" ;
				identity:givenName "Electra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Bard" ;
				identity:givenName "Aeschylus" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Forte" ;
				identity:givenName "Euripides" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Mycenae" ;
				identity:givenName "Thyestes" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Troy" ;
				identity:givenName "Cassandra" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:LatLongCoordinatesFacet ;
				location:latitude "48.860346"^^xsd:decimal ;
				location:longitude "2.331199"^^xsd:decimal ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				location:locality "Argos" ;
				location:postalCode "98052" ;
				location:region "Greece" ;
				location:street "Palace Blvd" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountIssuer <http://example.org/kb/olympus-uuid> ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "Value is not member of the vocabulary AccountTypeVocab." ;
			sh:resultPath observable:accountType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:OrConstraintComponent ;
			sh:sourceShape [
				sh:message "Value is not member of the vocabulary AccountTypeVocab." ;
				sh:or (
					[
						sh:datatype vocabulary:AccountTypeVocab ;
						sh:in (
							"ldap"^^vocabulary:AccountTypeVocab
							"nis"^^vocabulary:AccountTypeVocab
							"openid"^^vocabulary:AccountTypeVocab
							"radius"^^vocabulary:AccountTypeVocab
							"tacacs"^^vocabulary:AccountTypeVocab
							"unix"^^vocabulary:AccountTypeVocab
							"windows_domain"^^vocabulary:AccountTypeVocab
							"windows_local"^^vocabulary:AccountTypeVocab
						) ;
					]
					[
						sh:datatype xsd:string ;
					]
				) ;
				sh:path observable:accountType ;
			] ;
			sh:value "Phone"^^vocabulary:AccountTypeVocab ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:AccountFacet ;
				observable:accountType "Phone"^^vocabulary:AccountTypeVocab ;
				observable:isActive "true"^^xsd:boolean ;
			] ;
			sh:resultMessage "Value is not member of the vocabulary AccountTypeVocab." ;
			sh:resultPath observable:accountType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:OrConstraintComponent ;
			sh:sourceShape [
				sh:message "Value is not member of the vocabulary AccountTypeVocab." ;
				sh:or (
					[
						sh:datatype vocabulary:AccountTypeVocab ;
						sh:in (
							"ldap"^^vocabulary:AccountTypeVocab
							"nis"^^vocabulary:AccountTypeVocab
							"openid"^^vocabulary:AccountTypeVocab
							"radius"^^vocabulary:AccountTypeVocab
							"tacacs"^^vocabulary:AccountTypeVocab
							"unix"^^vocabulary:AccountTypeVocab
							"windows_domain"^^vocabulary:AccountTypeVocab
							"windows_local"^^vocabulary:AccountTypeVocab
						) ;
					]
					[
						sh:datatype xsd:string ;
					]
				) ;
				sh:path observable:accountType ;
			] ;
			sh:value "Phone"^^vocabulary:AccountTypeVocab ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:BluetoothAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayloadReferenceURL <http://example.org/kb/url-b6d049be-f210-4f22-ae76-81141d51cb0f> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "245235000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "9080500"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "234909233"^^xsd:integer ;
				observable:rangeSize "120000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "SM-G925F Galaxy S6 Edge" ;
				observable:serialNumber "FDG344657" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "iPhone" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:model "MG552" ;
				observable:serialNumber "F18Q4LGRG5MD" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DiskPartitionFacet ;
				rdfs:comment
					"TODO: diskPartitionType in UCO 0.3.0 is supposed to describe the type of partition (per documenting rdfs:comment), not the type of the containing partition system.  However, further clarification is needed on the range of this property - the numeric type?  There does not appear to be a consistent dictionary labeling these numeric types, and tools frequently provide multiple guesses (e.g. TSK's mmls reports exfat and ntfs for one code)." ,
					"TODO: partitionOffset should be in bytes.  Nothing in this example specifies the sector size of the device's storage."
					;
				observable:diskPartitionType "MBR" ;
				observable:partitionID "06" ;
				observable:partitionLength "245235063"^^xsd:integer ;
				observable:partitionOffset "63"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAccountFacet ;
				observable:emailAddress <http://example.org/kb/email-address-9771a645-94ba-464e-a30d-3537feb637a3> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailAddressFacet ;
				observable:addressValue "electra.pleiade@sevensisters.com" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-uuid> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-uuid> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-uuid> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-uuid> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-uuid> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-uuid> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EmailMessageFacet ;
				observable:body "To me, too, grant this boon-dark death to deal unto Aegisthus, and to 'scape my doom." ;
				observable:from <http://example.org/kb/electra-emailaccount-uuid> ;
				observable:messageID "CAKBqNfyKo+ZXtkz6DUjWpvHy6O82jTbkNA@mail.gmail.com" ;
				observable:receivedTime "2017-06-21T13:44:23.400000+00:00"^^xsd:dateTime ;
				observable:sentTime "2017-06-21T13:44:22.190000+00:00"^^xsd:dateTime ;
				observable:subject "Revenge our father" ;
				observable:to <http://example.org/kb/orestes-emailaccount-uuid> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "db" ;
				observable:fileName "/data/data/com.android.providers.telephony/mmssms.db" ;
				observable:fileSystemType "EXT3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "122925"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:extension "dd" ;
				observable:fileName "AthensPD-2017220601-01.dd" ;
				observable:filePath "C:/evidence/AthensPD-2017220601-01.dd" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:observableCreatedTime "2017-06-22T08:12:19.320000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "90080500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileSystemFacet ;
				observable:fileSystemType "EXT3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				rdfs:comment
					"TODO: uco-observable:sentTime only has a domain of uco-observable:EmailMessage." ,
					"TODO: uco-observable:to only has a domain of uco-observable:PhoneCall."
					;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "A wedded wife, she slays her lord, Helped by another hand!" ;
				observable:sentTime "2017-06-20T09:34:42.120000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				observable:application <http://example.org/kb/sms-application1> ;
				observable:from <http://example.org/kb/cassandra-mobileaccount-uuid> ;
				observable:messageText "Low lie the shattered towers whereas they fell, and I--ah burning heart!--shall soon lie low as well." ;
				observable:sentTime "2017-06-20T09:37:35.130000+00:00"^^xsd:dateTime ;
				observable:to
					<http://example.org/kb/argive-elder1-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder2-phoneaccnt-uuid> ,
					<http://example.org/kb/argive-elder3-phoneaccnt-uuid>
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1237471334" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileAccountFacet ;
				observable:MSISDN "1239275339" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MobileDeviceFacet ;
				rdfs:comment
					"TODO: An earlier version of Oresteia had a timezoneSetting property.  This can apparently now be either uco-observable property 'timezoneDST' or 'timezoneStandard', both a xsd:string type.  Is there an option, such as drawing data from the IANA time zones database, to simplify this?" ,
					"TODO: Should uco-observable:clockSetting be a datetime instead of a string?"
					;
				observable:IMEI "359305065690067" ;
				observable:clockSetting "2017-06-22T07:36:24.350000+00:00"^^xsd:dateTime ;
				observable:keypadUnlockCode "1234" ;
				observable:storageCapacityInBytes "11000000000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "iOS" ;
				observable:manufacturer <http://example.org/kb/organization-0645704f-fc66-4d90-810a-dc0fb8a95fa4> ;
				observable:version "10.3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.android.providers.telephony/mmssms.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237771337" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237772341" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PhoneAccountFacet ;
				observable:phoneNumber "1237775121" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:URLFacet ;
				observable:fullValue "http://www.facebook.com/corpses.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:WifiAddressFacet ;
				observable:addressValue "d0:33:11:13:e7:a1" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "0611ea093d19b1c73a5285ff43741dd77f2a8d983c1c71044eb072e44f5dcb0a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "7ea081166336119da78ee4bbdbd06840b94efe28988a2bdb0bcf2387a481e283"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a13225720074371d56a4f4d5117fbb4953c5b1d316b31f21edcb7ed8fdf66c6e"^^xsd:hexBinary ;
			] ;
		]
		;
	.

