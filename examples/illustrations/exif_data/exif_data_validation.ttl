@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix vocabulary1: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary1:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType <drafting:image/jpeg> ;
				observable:sizeInBytes "35000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:string" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:mimeType ;
			] ;
			sh:value <drafting:image/jpeg> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary1:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType <drafting:image/jpeg> ;
				observable:sizeInBytes "35000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:Literal" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:mimeType ;
			] ;
			sh:value <drafting:image/jpeg> ;
		]
		;
	.

