@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix drafting: <http://example.org/ontology/drafting/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/message-1505f33f-9946-4280-89cd-2e72bdff900e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:MessageFacet ;
				observable:messageText "Hello World" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite-file-3237feb2-1be5-465b-8da2-4e6c3fb737bb> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "123456"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite-journal-file-2d52c6fe-1346-4460-9693-b3ea86e721a5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-journal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-journal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite-record-fc21b376-98b0-4c07-b802-f855dcdd95b2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a drafting:DatabaseRecordFacet ;
				drafting:databaseFieldName "message_content" ;
				drafting:databaseFieldValue "Hello World" ;
				drafting:databaseRowID "12345" ;
				drafting:databaseTable "messages" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite-wal-file-e5598c4e-9d1a-4b14-9142-49900dd6b8e9> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-wal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-wal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:DatabaseRecordFacet ;
				drafting:databaseFieldName "message_content" ;
				drafting:databaseFieldValue "Hello World" ;
				drafting:databaseRowID "12345" ;
				drafting:databaseTable "messages" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a drafting:DatabaseRecordFacet ;
				drafting:databaseFieldName "message_content" ;
				drafting:databaseFieldValue "Hello World" ;
				drafting:databaseRowID "12345" ;
				drafting:databaseTable "messages" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a drafting:DatabaseRecordFacet ;
				drafting:databaseFieldName "message_content" ;
				drafting:databaseFieldValue "Hello World" ;
				drafting:databaseRowID "12345" ;
				drafting:databaseTable "messages" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a drafting:DatabaseRecordFacet ;
				drafting:databaseFieldName "message_content" ;
				drafting:databaseFieldValue "Hello World" ;
				drafting:databaseRowID "12345" ;
				drafting:databaseTable "messages" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "123456"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "123456"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "123456"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "123456"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-journal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-journal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-journal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-journal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-journal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-journal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-journal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-journal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-wal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-wal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-wal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-wal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-wal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-wal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:createdTime "2022-01-01T00:00:00+00:00"^^xsd:dateTime ;
				observable:extension "sqlite3-wal" ;
				observable:fileName "my-database" ;
				observable:filePath "/path/to/my-database.sqlite3-wal" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:sizeInBytes "12345"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:messageText "Hello World" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:MessageFacet ;
				observable:messageText "Hello World" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:MessageFacet ;
				observable:messageText "Hello World" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:MessageFacet ;
				observable:messageText "Hello World" ;
			] ;
		]
		;
	.

