@prefix acme: <http://custompb.acme.org/core#> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix ns1: <http://example.org/ontology/drafting/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix vocabulary: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/android_device-814c2229-d163-47af-87be-6437b205dde4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:cpuFamily "Exynos 5410 Octa" ;
				observable:gpuFamily "Power VR SGX544MP3" ;
				observable:processorArchitecture "Octa-core" ;
				observable:totalRam "2147483648"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/android_device-814c2229-d163-47af-87be-6437b205dde4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "I9500 Galaxy S4" ;
				observable:serialNumber "123456SAM" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/android_device-814c2229-d163-47af-87be-6437b205dde4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Android" ;
				observable:manufacturer <http://example.org/kb/organization-2b3b98e2-aea2-4270-876a-7f9917623cb7> ;
				observable:version "4.2.2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/android_image-e1837dd8-2275-436e-8694-1bc8124fc4c9> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				ns1:accessedAction "2010-01-15T17:59:43.25Z" ;
				ns1:createdAction "2010-01-15T17:59:43.25Z" ;
				observable:extension "img" ;
				observable:fileName "DFL-20140712-001C.img" ;
				observable:filePath "C:/input_devices/DFL-20140712-001C.img" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:metadataChangeTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/android_image-e1837dd8-2275-436e-8694-1bc8124fc4c9> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/chunk_of_data-4456c025-6e96-43b3-a2d1-e7b3952a1731> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/decoded_attachment-b7589f93-79b0-483b-b17d-46f5d9774704> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/decrypted_blob-cac885bc-f2f3-405d-907a-8b591aeeaf69> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/forensic_lab_computer-89c30df0-5e7f-4076-8f74-3271e730a013> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a
					acme:InventoryComputerFacet ,
					core:Facet
					;
				acme:inventoryNumber "10503" ;
				acme:name "DFL-03" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/forensic_lab_computer-89c30df0-5e7f-4076-8f74-3271e730a013> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:biosVersion "E1762IMS.10M" ;
				observable:cpuFamily "Intel Pentium i7" ;
				observable:totalRam "4294967296"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/forensic_lab_computer-89c30df0-5e7f-4076-8f74-3271e730a013> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/forensic_lab_computer-89c30df0-5e7f-4076-8f74-3271e730a013> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/image_partition-5a804a74-d146-4ab0-87f8-de09fc041a5e> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-2a1f4ca6-87c0-4fd5-8078-826420c8f45b> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "C:/input_devices/DFL-20140712-001C.img" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-345d313f-908f-4f66-954a-016748368312> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-3bacd102-db00-4bcc-8998-e58e4431b959> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DiskPartitionFacet ;
				observable:partitionID "3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-697908d0-2927-4a42-b8cc-ded228dcbfc2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:SQLiteBlobFacet ;
				observable:columnName "data" ;
				observable:rowCondition "pk_id == 5" ;
				observable:tableName "AttachmentTable" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-7187406b-78ce-49b4-a684-460a69b009aa> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-92955c3a-c82a-41c7-ad3b-096d1c0d48ba> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "45"^^xsd:integer ;
				observable:rangeSize "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-a9371c5e-0550-40e9-9e13-65afa01da881> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.whatsapp/cache/messages.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-b22f8a64-21cb-4a77-b3eb-701612b39265> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/some/files/in/archive/attachment.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite_blob-ef2be7d6-f4d0-48e4-bfc9-2e4432cc08a1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite_blob-ef2be7d6-f4d0-48e4-bfc9-2e4432cc08a1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite_database-0ec9db0f-7dfc-4531-8def-f71505326884> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/sqlite_database-0ec9db0f-7dfc-4531-8def-f71505326884> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:extension "db" ;
				observable:fileName "messages.db" ;
				observable:filePath "/data/data/com.whatsapp/cache/messages.db" ;
				observable:fileSystemType "EXT4" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tar_archive_file-2857804a-91d7-4cfb-8929-8448d92bb8de> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tar_archive_file-2857804a-91d7-4cfb-8929-8448d92bb8de> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/tar_archive_file-2857804a-91d7-4cfb-8929-8448d92bb8de> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:filePath "/some/files/in/archive/attachment.jpg" ;
				observable:fileSystemType "TAR" ;
				observable:modifiedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					acme:InventoryComputerFacet ,
					core:Facet
					;
				acme:inventoryNumber "10503" ;
				acme:name "DFL-03" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a
					acme:InventoryComputerFacet ,
					core:Facet
					;
				acme:inventoryNumber "10503" ;
				acme:name "DFL-03" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a
					acme:InventoryComputerFacet ,
					core:Facet
					;
				acme:inventoryNumber "10503" ;
				acme:name "DFL-03" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a
					acme:InventoryComputerFacet ,
					core:Facet
					;
				acme:inventoryNumber "10503" ;
				acme:name "DFL-03" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				ns1:accessedAction "2010-01-15T17:59:43.25Z" ;
				ns1:createdAction "2010-01-15T17:59:43.25Z" ;
				observable:extension "img" ;
				observable:fileName "DFL-20140712-001C.img" ;
				observable:filePath "C:/input_devices/DFL-20140712-001C.img" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:metadataChangeTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				ns1:accessedAction "2010-01-15T17:59:43.25Z" ;
				ns1:createdAction "2010-01-15T17:59:43.25Z" ;
				observable:extension "img" ;
				observable:fileName "DFL-20140712-001C.img" ;
				observable:filePath "C:/input_devices/DFL-20140712-001C.img" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:metadataChangeTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				ns1:accessedAction "2010-01-15T17:59:43.25Z" ;
				ns1:createdAction "2010-01-15T17:59:43.25Z" ;
				observable:extension "img" ;
				observable:fileName "DFL-20140712-001C.img" ;
				observable:filePath "C:/input_devices/DFL-20140712-001C.img" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:metadataChangeTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				ns1:accessedAction "2010-01-15T17:59:43.25Z" ;
				ns1:createdAction "2010-01-15T17:59:43.25Z" ;
				observable:extension "img" ;
				observable:fileName "DFL-20140712-001C.img" ;
				observable:filePath "C:/input_devices/DFL-20140712-001C.img" ;
				observable:fileSystemType "NTFS" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:metadataChangeTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ComputerSpecificationFacet ;
				observable:biosVersion "E1762IMS.10M" ;
				observable:cpuFamily "Intel Pentium i7" ;
				observable:totalRam "4294967296"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:biosVersion "E1762IMS.10M" ;
				observable:cpuFamily "Intel Pentium i7" ;
				observable:totalRam "4294967296"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ComputerSpecificationFacet ;
				observable:biosVersion "E1762IMS.10M" ;
				observable:cpuFamily "Intel Pentium i7" ;
				observable:totalRam "4294967296"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:biosVersion "E1762IMS.10M" ;
				observable:cpuFamily "Intel Pentium i7" ;
				observable:totalRam "4294967296"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ComputerSpecificationFacet ;
				observable:cpuFamily "Exynos 5410 Octa" ;
				observable:gpuFamily "Power VR SGX544MP3" ;
				observable:processorArchitecture "Octa-core" ;
				observable:totalRam "2147483648"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:cpuFamily "Exynos 5410 Octa" ;
				observable:gpuFamily "Power VR SGX544MP3" ;
				observable:processorArchitecture "Octa-core" ;
				observable:totalRam "2147483648"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ComputerSpecificationFacet ;
				observable:cpuFamily "Exynos 5410 Octa" ;
				observable:gpuFamily "Power VR SGX544MP3" ;
				observable:processorArchitecture "Octa-core" ;
				observable:totalRam "2147483648"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ComputerSpecificationFacet ;
				observable:cpuFamily "Exynos 5410 Octa" ;
				observable:gpuFamily "Power VR SGX544MP3" ;
				observable:processorArchitecture "Octa-core" ;
				observable:totalRam "2147483648"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
				types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash
					[
						a types:Hash ;
						types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
						types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
					] ,
					[
						a types:Hash ;
						types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
						types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
					]
					;
				observable:magicNumber "/9j/ww==" ;
				observable:mimeType "image/jpg" ;
				observable:sizeInBytes "3500"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:byteOrder "Big-endian"^^vocabulary:EndiannessTypeVocab ;
				observable:dataPayload "Q0FTRSBpcyBhbiBhd2Vzb21lIG9udG9sb2d5IQ=" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "29"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "NzUgNzMgNzQgNjEgNzI=" ;
				observable:mimeType "application/x-tar" ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "54000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
				] ;
				observable:magicNumber "U1FMaXRlIGZvcm1hdCAzAA==" ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:dataPayload "<base 64 encoded data of the file>" ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "23000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
				] ;
				observable:sizeInBytes "45654000"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "45"^^xsd:integer ;
				observable:rangeSize "29"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "45"^^xsd:integer ;
				observable:rangeSize "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DataRangeFacet ;
				observable:rangeOffset "45"^^xsd:integer ;
				observable:rangeSize "29"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DataRangeFacet ;
				observable:rangeOffset "45"^^xsd:integer ;
				observable:rangeSize "29"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "I9500 Galaxy S4" ;
				observable:serialNumber "123456SAM" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "I9500 Galaxy S4" ;
				observable:serialNumber "123456SAM" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "I9500 Galaxy S4" ;
				observable:serialNumber "123456SAM" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DeviceFacet ;
				observable:deviceType "Smart_Phone" ;
				observable:manufacturer <http://example.org/kb/organization-fb6c05a0-b6be-4a10-ba62-0e7b1da4c0ec> ;
				observable:model "I9500 Galaxy S4" ;
				observable:serialNumber "123456SAM" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				observable:partitionID "3" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:DiskPartitionFacet ;
				observable:partitionID "3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DiskPartitionFacet ;
				observable:partitionID "3" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:DiskPartitionFacet ;
				observable:partitionID "3" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EncodedStreamFacet ;
				observable:encodingMethod "BASE64" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:EncryptedStreamFacet ;
				observable:encryptionIV "whatsappIV" ;
				observable:encryptionKey "whatsappKEY" ;
				observable:encryptionMethod "AES" ;
				observable:encryptionMode "CBC" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:filePath "/some/files/in/archive/attachment.jpg" ;
				observable:fileSystemType "TAR" ;
				observable:modifiedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:filePath "/some/files/in/archive/attachment.jpg" ;
				observable:fileSystemType "TAR" ;
				observable:modifiedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:filePath "/some/files/in/archive/attachment.jpg" ;
				observable:fileSystemType "TAR" ;
				observable:modifiedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:filePath "/some/files/in/archive/attachment.jpg" ;
				observable:fileSystemType "TAR" ;
				observable:modifiedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2009-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:extension "db" ;
				observable:fileName "messages.db" ;
				observable:filePath "/data/data/com.whatsapp/cache/messages.db" ;
				observable:fileSystemType "EXT4" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:extension "db" ;
				observable:fileName "messages.db" ;
				observable:filePath "/data/data/com.whatsapp/cache/messages.db" ;
				observable:fileSystemType "EXT4" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:FileFacet ;
				observable:accessedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:extension "db" ;
				observable:fileName "messages.db" ;
				observable:filePath "/data/data/com.whatsapp/cache/messages.db" ;
				observable:fileSystemType "EXT4" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:FileFacet ;
				observable:accessedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:extension "db" ;
				observable:fileName "messages.db" ;
				observable:filePath "/data/data/com.whatsapp/cache/messages.db" ;
				observable:fileSystemType "EXT4" ;
				observable:isDirectory "false"^^xsd:boolean ;
				observable:modifiedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:observableCreatedTime "2010-01-15T17:59:43.250000+00:00"^^xsd:dateTime ;
				observable:sizeInBytes "546000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Android" ;
				observable:manufacturer <http://example.org/kb/organization-2b3b98e2-aea2-4270-876a-7f9917623cb7> ;
				observable:version "4.2.2" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Android" ;
				observable:manufacturer <http://example.org/kb/organization-2b3b98e2-aea2-4270-876a-7f9917623cb7> ;
				observable:version "4.2.2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Android" ;
				observable:manufacturer <http://example.org/kb/organization-2b3b98e2-aea2-4270-876a-7f9917623cb7> ;
				observable:version "4.2.2" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Android" ;
				observable:manufacturer <http://example.org/kb/organization-2b3b98e2-aea2-4270-876a-7f9917623cb7> ;
				observable:version "4.2.2" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.whatsapp/cache/messages.db" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.whatsapp/cache/messages.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.whatsapp/cache/messages.db" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/data/data/com.whatsapp/cache/messages.db" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/some/files/in/archive/attachment.jpg" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/some/files/in/archive/attachment.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "/some/files/in/archive/attachment.jpg" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "/some/files/in/archive/attachment.jpg" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "C:/input_devices/DFL-20140712-001C.img" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "C:/input_devices/DFL-20140712-001C.img" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:PathRelationFacet ;
				observable:path "C:/input_devices/DFL-20140712-001C.img" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:PathRelationFacet ;
				observable:path "C:/input_devices/DFL-20140712-001C.img" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:SQLiteBlobFacet ;
				observable:columnName "data" ;
				observable:rowCondition "pk_id == 5" ;
				observable:tableName "AttachmentTable" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a observable:SQLiteBlobFacet ;
				observable:columnName "data" ;
				observable:rowCondition "pk_id == 5" ;
				observable:tableName "AttachmentTable" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:SQLiteBlobFacet ;
				observable:columnName "data" ;
				observable:rowCondition "pk_id == 5" ;
				observable:tableName "AttachmentTable" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a observable:SQLiteBlobFacet ;
				observable:columnName "data" ;
				observable:rowCondition "pk_id == 5" ;
				observable:tableName "AttachmentTable" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
				types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
				types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
				types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "MD5"^^vocabulary:HashNameVocab ;
				types:hashValue "3d137a188c1e82247b815209ce44af2c"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8bb0cf6eb9b17d0f7d22b456f121257dc1254e1f01665370476383ea776df414"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8c8b39473c4064f6b4db11a67251ffdf65c42ebadc5c3e02a009f95f6cf7c9e8"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"^^xsd:hexBinary ;
			] ;
		]
		;
	.

