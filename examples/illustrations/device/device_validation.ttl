@prefix core: <https://unifiedcyberontology.org/ontology/uco/core#> .
@prefix observable: <https://unifiedcyberontology.org/ontology/uco/observable#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:string" ;
			sh:resultPath observable:manufacturer ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:manufacturer ;
			] ;
			sh:value <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:DeviceFacet ;
				observable:deviceType "Computer" ;
				observable:manufacturer <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
				observable:model "Inspiron 5000" ;
				observable:serialNumber "D1234567" ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:Literal" ;
			sh:resultPath observable:manufacturer ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:manufacturer ;
			] ;
			sh:value <http://example.org/kb/organization-c240cf37-0556-439b-9a51-1ca41732010d> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:installDate "2019-07-10T16:33:42+00:00"^^xsd:dateTime ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
			sh:resultMessage "Value is not Literal with datatype xsd:string" ;
			sh:resultPath observable:manufacturer ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:DatatypeConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:manufacturer ;
			] ;
			sh:value <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:OperatingSystemFacet ;
				core:name "Windows 7 Ultimate Edition" ;
				observable:installDate "2019-07-10T16:33:42+00:00"^^xsd:dateTime ;
				observable:manufacturer <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
				observable:version "6.1.7601 Service Pack 1 Build 7601" ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:Literal" ;
			sh:resultPath observable:manufacturer ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:datatype xsd:string ;
				sh:maxCount "1"^^xsd:integer ;
				sh:nodeKind sh:Literal ;
				sh:path observable:manufacturer ;
			] ;
			sh:value <http://example.org/kb/organization-cc0e0667-eadf-4b2e-9618-3f62b1bdae26> ;
		]
		;
	.

